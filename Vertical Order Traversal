#include <bits/stdc++.h> 
/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/

vector<int> verticalOrderTraversal(TreeNode<int> *root)
{
    map<int,vector<int>> mp;
    queue<pair<TreeNode<int> *,int>> q;
    q.push({root,0});
    
    while(!q.empty())
    {
        int count=q.size();
        for(int i=0;i<count;i++)
        {
            auto it=q.front();
            TreeNode<int> *node=it.first;
            int dis= it.second;
            mp[dis].push_back(node->data);
            q.pop();

            if(node->left!=NULL)
            q.push({node->left,dis-1});
            if(node->right!=NULL)
            q.push({node->right,dis+1});
            
        }
    }
    vector<int> ans;
    for(auto it:mp)
    {
        vector<int> arr=it.second;
        for(int i=0;i<arr.size();i++)
        {
          ans.push_back(arr[i]);  
        }
    }
    return ans;
    
}
