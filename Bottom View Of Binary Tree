#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){

    
    queue<pair<BinaryTreeNode<int> *,int>> q;
    q.push({root,0});
    map<int,int> mp;
    while(!q.empty())
    {
        int count=q.size();
        for(int i=0;i<count;i++)
        {
            auto it= q.front();
            BinaryTreeNode<int> *node=it.first;
            int dis=it.second;
            mp[dis]=node->data;
            q.pop();
            if(node->left!=NULL)
            q.push({node->left,dis-1});
            if(node->right!=NULL)
            q.push({node->right,dis+1});
        }
    }
    vector<int> res;
    for(auto it:mp)
    {
        res.push_back(it.second);
    }

    return res;
    
}
