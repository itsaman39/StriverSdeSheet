#include <bits/stdc++.h> 
vector<int> maxMinWindow(vector<int> arr, int n) {
    stack<int> s;

	int lt[n + 1];
	int rgt[n + 1];

	for (int i = 0; i < n; i++) {
		lt[i] = -1;
		rgt[i] = n;
	}
	for (int i = 0; i < n; i++) {
		while (!s.empty() && arr[s.top()] >= arr[i])
			s.pop();

		if (!s.empty())
			lt[i] = s.top();

		s.push(i);
	}
	while (!s.empty())
		s.pop();
	for (int i = n - 1; i >= 0; i--) {
		while (!s.empty() && arr[s.top()] >= arr[i])
			s.pop();

		if (!s.empty())
			rgt[i] = s.top();

		s.push(i);
	}
	vector<int> ans(n+1);
	for (int i = 0; i <= n; i++)
		ans[i] = INT_MIN;

	for (int i = 0; i < n; i++) {
		int len = rgt[i] - lt[i] - 1;
		ans[len] = max(ans[len], arr[i]);
	}
	for (int i = n - 1; i >= 1; i--)
		ans[i] = max(ans[i], ans[i + 1]);
    
    vector<int> sol(n);

       for (int i = 1; i <= n; i++)
       sol[i-1]=ans[i];

       return sol;
    
}

